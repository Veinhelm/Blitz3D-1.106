<html><head><title>Command: Gosub </title><meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1'><link rel='stylesheet' href='../css/commands.css' type='text/css'></head><body><span class='Command'>&nbsp;&nbsp;Gosub label&nbsp;&nbsp;</span></p><span class='header'>Definition:</span> <br><br><table width='100%' border='0' cellspacing='2' cellpadding='2' align='center'><tr><td>Branches execution of a program to a designated label with the intention of returning to the original calling code.</td></tr></table><span class='header'><br>Parameter Description:</span> <br><br><table width='100%' border='0' cellspacing='2' cellpadding='2' align='center'><tr><td>label = any valid exisiting label</td></tr></table><p class='header'>Command Description: <br><br><table width='100%' border='0' cellspacing='2' cellpadding='2' align='center'><tr><td>This branches the flow of the program to a designated label, with the understanding that there will be a Return later on in the called code to resume execution of the program where the Gosub was called.  With the use of Functions inside of Blitz, it isn't very practical to use Gosubs, but you may still find it useful.  If you do not require the need to return execution back to the Gosub statement, you may use Goto instead.  See the example.</td></tr></table><p class='header'>Example: <br><br><table width='100%' border='0' cellspacing='2' cellpadding='2' align='center'><tr><td>Print "The program starts ..."<br>
Gosub label1<br>
Print "The Program ends ..."<br>
<br>
; wait for ESC key before ending<br>
While Not KeyHit(1) <br>
Wend<br>
<br>
End<br>
<br>
.label1<br>
Print "We could do all sorts of things in this part of the program..."<br>
Print "But, we'll just go back to the original code, instead ..."<br>
Return<br>
<br></td></tr></table><p><b><a target="_top" href="../index.htm">Index</a></b></p></body>
</html>
